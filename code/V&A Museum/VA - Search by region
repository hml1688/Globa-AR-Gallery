<!DOCTYPE html>
<html lang="zh">
<head>
<meta charset="UTF-8">
<title>V&amp;A artworks · 按大区+年代搜索</title>
<meta name="viewport" content="width=device-width,initial-scale=1">
<style>
  body{font-family:Arial,Helvetica,sans-serif;margin:1rem}
  form{margin-bottom:1rem}
  input,select{width:8rem;margin-right:.6rem;padding:.25rem}
  button{padding:.35rem .9rem}
  #grid{display:flex;flex-wrap:wrap;gap:1rem}
  .item{width:230px;text-align:center}
  .item img{width:100%;border-radius:6px;cursor:pointer}
  .msg{margin-top:1rem;font-style:italic}
</style>
</head>
<body>

<h2>Victoria &amp; Albert Museum · Region search</h2>

<form id="qry">
  Region:
  <select id="regionSel">
    <option>Europe</option>
    <option>North and central America</option>
    <option>Asia</option>
    <option>Latin America</option>
    <option>Africa &amp; Oceania</option>
  </select>
  From&nbsp;year: <input id="yearFrom" placeholder="1500" required>
  To&nbsp;year:&nbsp;<input id="yearTo"   placeholder="1900" required>
  <button type="submit">Search</button>
</form>

<div id="grid"></div>
<p class="msg" id="msg"></p>

<script>
/* ====== 配置 ====== */
const WANT = 20, PAGE_SIZE = 100, MAX_COUNTRY = 8;

const REGION_COUNTRIES = {
  "Europe": ["France","Germany","Italy","United Kingdom","England",
             "Netherlands","Spain","Sweden","Russia"],
  "North and central America": ["United States","USA","Mexico",
             "Canada","Guatemala","Cuba"],
  "Asia": ["China","Japan","India","Korea","Iran",
           "Turkey","Thailand","Indonesia"],
  "Latin America": ["Brazil","Argentina","Peru",
                    "Chile","Colombia","Ecuador","Bolivia"],
  "Africa & Oceania": ["Nigeria","Egypt","South Africa","Kenya","Ghana",
                       "Australia","New Zealand","Fiji","Papua New Guinea"]
};

/* ====== DOM ====== */
const grid=document.getElementById('grid'), msg=document.getElementById('msg');
document.getElementById('qry').addEventListener('submit', e=>{
  e.preventDefault();
  const f=+yearFrom.value, t=+yearTo.value;
  if(isNaN(f)||isNaN(t)){alert('请输入有效年份');return;}
  searchRegion(regionSel.value,Math.min(f,t),Math.max(f,t));
});

/* ====== 主流程 ====== */
async function searchRegion(region,fromY,toY){
  grid.innerHTML=''; msg.textContent='Loading…';
  const countries=[...REGION_COUNTRIES[region]];
  shuffle(countries);

  /* ---------- 把每国合格藏品放进 buckets ---------- */
  const buckets={}, tasks=[];
  for(const c of countries.slice(0,MAX_COUNTRY)){
    tasks.push(
      fetch(buildURL('q_place_name',c,fromY,toY))
       .then(r=>r.json())
       .then(j=>{
         const good=(j.records||[]).filter(r=>
              r._images?._primary_thumbnail &&
              dateOverlap(r._primaryDate,fromY,toY) &&
              placeMatches(r,c));         // 关键过滤
         if(good.length) buckets[c]=good;
       })
    );
  }
  await Promise.all(tasks);

/* --- 轮询各桶平均取卡 --- */
const selection=[];
const seen = new Set();                     // 已选 systemNumber

while(selection.length < WANT){
  let moved = false;
  for(const [c,arr] of Object.entries(buckets)){
    /* 跳过已经选过的条目 */
    while(arr.length && seen.has(arr[arr.length-1].systemNumber)){
      arr.pop();
    }
    if(arr.length){
      const rec = arr.pop();
      selection.push(rec);
      seen.add(rec.systemNumber);
      moved = true;
      if(selection.length === WANT) break;
    }
  }
  if(!moved) break;                         // 所有桶都空或都重复
}

/* --- 用本区剩余补齐，也同样去重 --- */
if(selection.length < WANT){
  const leftovers=[];
  Object.values(buckets).forEach(arr=>leftovers.push(...arr));
  shuffle(leftovers);
  for(const rec of leftovers){
    if(selection.length === WANT) break;
    if(seen.has(rec.systemNumber)) continue;
    selection.push(rec);
    seen.add(rec.systemNumber);
  }
}


  if(!selection.length){
    msg.textContent=`${region} 区域在 ${fromY}–${toY} 无符合条件藏品`;
    return;
  }

  shuffle(selection);
  selection.forEach(addCard);

  /* ---------- 统计展示 ---------- */
  const perCountry={};
  selection.forEach(r=>{
    const p=originOf(r); perCountry[p]=(perCountry[p]||0)+1;
  });
  const summary=Object.entries(perCountry).map(([c,n])=>`${c} ${n}件`).join('，');
  msg.textContent=`共显示 ${selection.length} 件 (${summary}) — 区域：${region}，年代 ${fromY}–${toY}`;
}

/* ====== 辅助函数 ====== */
function buildURL(param,val,f,t){
  return `https://api.vam.ac.uk/v2/objects/search?${param}=${encodeURIComponent(val)}`
        +`&year_made_from=${f}&year_made_to=${t}&images_exist=1&page_size=${PAGE_SIZE}`;
}
function shuffle(a){for(let i=a.length-1;i>0;i--){const j=Math.random()*(i+1)|0;[a[i],a[j]]=[a[j],a[i]];}}
function dateOverlap(str,f,t){
  const yrs=(str||'').match(/-?\\d{1,4}/g)?.map(Number)||[];
  if(!yrs.length) return true;
  const mn=Math.min(...yrs), mx=Math.max(...yrs); return !(mx<f||mn>t);
}
function originOf(r){
  return r._primaryPlace || r.placeOfOrigin || r.places?.[0]?.name || 'Unknown';
}
function placeMatches(rec,country){
  const place=originOf(rec).toLowerCase(), kw=country.toLowerCase();
  return place===kw || place.includes(kw);
}

/* ====== 卡片渲染 ====== */
function addCard(r){
  const img=r._images._primary_thumbnail, big=r._images._iiif_image_base_url;
  const title=r._primaryTitle||r.objectType||'(object)';
  const date=r._primaryDate||'', maker=r._primaryMaker?.name||'', place=originOf(r);
  grid.insertAdjacentHTML('beforeend',`
    <div class="item">
      <img src="${img}" alt="${title}" ${big?`onclick="window.open('${big}full/768,/0/default.jpg')"`:''}>
      <p>
        <strong>Name:</strong> ${title}<br>
        <strong>Date:</strong> ${date}<br>
        <strong>Artist/Maker:</strong> ${maker}<br>
        <strong>Place&nbsp;of&nbsp;origin:</strong> ${place}
      </p>
    </div>`);
}
</script>
</body>
</html>
