<!DOCTYPE html>
<html lang="zh">
<head>
<meta charset="UTF-8">
<title>V&A artworks · 按大区+年代搜索</title>
<meta name="viewport" content="width=device-width,initial-scale=1">
<style>
  body{font-family:Arial,Helvetica,sans-serif;margin:1rem}
  form{margin-bottom:1rem}
  input,select{width:8rem;margin-right:.6rem;padding:.25rem}
  button{padding:.35rem .9rem}
  #grid{display:flex;flex-wrap:wrap;gap:1rem}
  .item{width:230px;text-align:center}
  .item img{width:100%;border-radius:6px;cursor:pointer}
  .msg{margin-top:1rem;font-style:italic}
</style>
</head>
<body>

<h2>Victoria & Albert Museum · Region search</h2>

<form id="qry">
  Region:
  <select id="regionSel">
    <option>Europe</option>
    <option>North and central America</option>
    <option>Asia</option>
    <option>Latin America</option>
    <option>Africa & Oceania</option>
  </select>
  From&nbsp;year: <input id="yearFrom" placeholder="1500" required>
  To&nbsp;year:&nbsp;<input id="yearTo"   placeholder="1900" required>
  <button type="submit">Search</button>
</form>

<div id="grid"></div>
<p class="msg" id="msg"></p>

<script>
/* ---------------- 参数 ---------------- */
const WANT       = 20;    // 最终卡片数
const PAGE_SIZE  = 100;   // 每次拉 100 条
const MAX_COUNTRY= 8;     // 最多尝试 8 个国家

const REGION_COUNTRIES = {
  "Europe": ["France","Germany","Italy","United Kingdom","England",
             "Netherlands","Spain","Sweden","Russia"],
  "North and central America": ["United States","USA","Mexico",
             "Canada","Guatemala","Cuba"],
  "Asia": ["China","Japan","India","Korea","Iran",
           "Turkey","Thailand","Indonesia"],
  "Latin America": ["Brazil","Argentina","Peru",
                    "Chile","Colombia","Ecuador","Bolivia"],
  "Africa & Oceania": ["Nigeria","Egypt","South Africa","Kenya","Ghana",
                       "Australia","New Zealand","Fiji","Papua New Guinea"]
};

/* ---------------- DOM ---------------- */
const grid=document.getElementById('grid');
const msg =document.getElementById('msg');
document.getElementById('qry').addEventListener('submit',e=>{
  e.preventDefault();
  const a=+yearFrom.value,b=+yearTo.value;
  if(isNaN(a)||isNaN(b)){alert('请输入有效年份');return;}
  fetchRegion(regionSel.value,Math.min(a,b),Math.max(a,b));
});

/* ---------------- 主流程 ---------------- */
async function fetchRegion(region,fromY,toY){
  grid.innerHTML=''; msg.textContent='Loading…';
  const countries=[...REGION_COUNTRIES[region]];
  shuffle(countries);

  /* --- 第一步：每国取 1 页，并按国分桶 --- */
  const buckets={};                                    // {country:[records]}
  const tasks=countries.slice(0,MAX_COUNTRY).map(c=>{
    const url=buildURL('q_place_name',c,fromY,toY);
    return fetch(url).then(r=>r.json()).then(j=>{
      const eligible=(j.records||[]).filter(ok=>ok._images?._primary_thumbnail
                      && dateOverlap(ok._primaryDate,fromY,toY));
      if(eligible.length) buckets[c]=eligible;
    });
  });
  await Promise.all(tasks);

  /* --- 组合：轮询各桶抽卡 --- */
  const selection=[];
  while(selection.length<WANT){
    let added=false;
    for(const c of Object.keys(buckets)){
      if(buckets[c].length){
        selection.push(buckets[c].pop());
        added=true;
        if(selection.length===WANT) break;
      }
    }
    if(!added) break;              // 所有桶都空了
  }

  /* --- 不足则全文检索补齐 --- */
  if(selection.length<WANT){
    const url=buildURL('q',region,fromY,toY);
    const extra=(await fetch(url).then(r=>r.json())).records||[];
    const good=extra.filter(r=>r._images?._primary_thumbnail
                      && dateOverlap(r._primaryDate,fromY,toY));
    shuffle(good);
    for(const r of good){
      if(selection.find(x=>x.systemNumber===r.systemNumber)) continue;
      selection.push(r);
      if(selection.length===WANT) break;
    }
  }

  if(!selection.length){ msg.textContent='没有符合条件的藏品'; return; }

  shuffle(selection);
  selection.forEach(addCard);

  /* --- 统计信息 --- */
  const perCountry={};
  selection.forEach(r=>{
    const p = originOf(r);
    perCountry[p]=(perCountry[p]||0)+1;
  });
  const summary = Object.entries(perCountry)
                     .map(([c,n])=>`${c} ${n}件`).join('，');

  msg.textContent=
    `共抓取 ${selection.length} 件 (${summary}) — 区域：${region} 年代 ${fromY}–${toY}`;
}

/* ---------------- 辅助函数 ---------------- */
function buildURL(param,val,f,t){
  return `https://api.vam.ac.uk/v2/objects/search?${param}=`
       +`${encodeURIComponent(val)}&year_made_from=${f}&year_made_to=${t}`
       +`&images_exist=1&page_size=${PAGE_SIZE}`;
}
function shuffle(a){for(let i=a.length-1;i>0;i--){const j=Math.random()*(i+1)|0;[a[i],a[j]]=[a[j],a[i]];}}
function dateOverlap(str,f,t){
  const yrs=(str||'').match(/-?\d{1,4}/g)?.map(Number)||[];
  if(!yrs.length) return true;
  const mn=Math.min(...yrs),mx=Math.max(...yrs);
  return !(mx<f||mn>t);
}
function originOf(r){
  return r._primaryPlace || r.placeOfOrigin || r.places?.[0]?.name || 'Unknown';
}

/* ---------------- 渲染卡片 ---------------- */
function addCard(r){
  const img=r._images._primary_thumbnail;
  const big=r._images._iiif_image_base_url;
  const title=r._primaryTitle||r.objectType||'(object)';
  const date=r._primaryDate||'';
  const maker=r._primaryMaker?.name||'';
  const place=originOf(r);

  grid.insertAdjacentHTML('beforeend',`
    <div class="item">
      <img src="${img}" alt="${title}"
        ${big?`onclick="window.open('${big}full/768,/0/default.jpg')"`:''}>
      <p>
        <strong>Name:</strong> ${title}<br>
        <strong>Date:</strong> ${date}<br>
        <strong>Artist/Maker:</strong> ${maker}<br>
        <strong>Place of origin:</strong> ${place}
      </p>
    </div>`);
}
</script>
</body>
</html>
